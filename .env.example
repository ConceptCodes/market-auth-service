# Server Configuration
PORT="8000"                       # Port number for the server to listen on
NODE_ENV="development"            # Environment (development/production/test)

# Database Configuration
DATABASE_URL="postgresql://postgres:StrongPassword123@localhost:5432/auth_db"

# Database Connection Details
DATABASE_USER="postgres"          # Database username
DATABASE_PASSWORD="StrongPassword123" # Database password (use a strong password in production)
DATABASE_DB="auth_db"             # Database name
DATABASE_HOST="localhost"         # Database host (use "db" with Docker)
DATABASE_PORT="5432"              # PostgreSQL default port

# JWT Configuration
JWT_SECRET="change_this_to_a_secure_random_string_in_production"
JWT_REFRESH_SECRET="different_secure_random_string_for_refresh_tokens"
JWT_EXPIRES_IN="60m"              # Access token expiration (60 minutes)
JWT_REFRESH_EXPIRES_IN="7d"       # Refresh token expiration (7 days)

# Email Service (Resend)
RESEND_API_KEY="re_123456789abcdefghijklmnopqrstuvwxyz"

# Redis Configuration (for rate limiting, caching, etc.)
REDIS_HOST="localhost"            # Redis host (use "redis" with Docker)
REDIS_PORT="6379"                 # Redis default port
REDIS_PASSWORD="StrongRedisPassword123" # Redis password
REDIS_DB="0"                      # Redis database number
REDIS_EXPIRES_IN_MINS="5"         # Cache expiration in minutes

# Additional Configuration (uncomment as needed)
# CORS_ORIGIN="http://localhost:3000"  # CORS allowed origin
# LOG_LEVEL="info"                    # Logging level (debug/info/warn/error)
# RATE_LIMIT_MAX="100"                # Maximum requests per IP in window
# RATE_LIMIT_WINDOW_MS="900000"       # Rate limiting window (15 minutes in ms)